{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Diga\\\\Desktop\\\\RAzI\\\\frontendweb\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef, useContext } from 'react';\nimport { Chart, LineController, LineElement, PointElement, LinearScale, CategoryScale } from 'chart.js';\nimport { UserContext } from '../userContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const {\n    user\n  } = useContext(UserContext);\n  let chartRef = useRef(null);\n  let chartInstance = useRef(null);\n  Chart.register(LineController, LineElement, PointElement, LinearScale, CategoryScale);\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [cityName, setCityName] = useState(\"\");\n  const [favourites, setFavourites] = useState([]);\n  const [workout, setWorkout] = useState([]);\n  const weatherDescRef = useRef();\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setLat(latitude);\n        setLong(longitude);\n        fetch(`http://api.openweathermap.org/data/3.0/onecall?lat=${latitude}&lon=${longitude}&appid=a079118662ea266c81754b94e99980ab`).then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        }).then(data => {\n          console.log(data);\n          setWeather(data);\n          setCityName(\"\");\n        }).catch(error => {\n          console.error('There was a problem with the fetch operation: ', error);\n        });\n      }, error => {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      });\n    }\n    if (user) {\n      fetch(\"http://164.8.222.5:3000/users/favourites\", {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userID: user\n        })\n      }).then(response => response.json()).then(data => setFavourites(data)).catch(error => console.error('There was a problem with the fetch operation: ', error));\n    }\n  }, [user]);\n  let tempCelsius = 0;\n  let tempCelsiusDay = 0;\n  let tempCelsiusNight = 0;\n  let tempCelsiusMin = 0;\n  let tempCelsiusMax = 0;\n  let sunriseDate, sunriseHours, sunriseMinutes, sunriseStr;\n  let sunsetDate, sunsetHours, sunsetMinutes, sunsetStr;\n  let iconUrlCurrent, iconUrlDaily;\n  let weatherIcon, weatherDesc;\n  if (weather && weather.current && weather.daily) {\n    tempCelsius = weather.current.temp - 273.15;\n    tempCelsiusDay = weather.daily[0].temp.day - 273.15;\n    tempCelsiusNight = weather.daily[0].temp.night - 273.15;\n    tempCelsiusMin = weather.daily[0].temp.min - 273.15;\n    tempCelsiusMax = weather.daily[0].temp.max - 273.15;\n    sunriseDate = new Date(weather.daily[0].sunrise * 1000);\n    sunriseHours = sunriseDate.getHours();\n    sunriseMinutes = \"0\" + sunriseDate.getMinutes();\n    sunsetDate = new Date(weather.daily[0].sunset * 1000);\n    sunsetHours = sunsetDate.getHours();\n    sunsetMinutes = \"0\" + sunsetDate.getMinutes();\n    sunriseStr = sunriseHours + ':' + sunriseMinutes.substr(-2);\n    sunsetStr = sunsetHours + ':' + sunsetMinutes.substr(-2);\n    weatherIcon = weather.current.weather[0].icon;\n    iconUrlCurrent = `http://openweathermap.org/img/wn/${weather.current.weather[0].icon}.png`;\n    iconUrlDaily = `http://openweathermap.org/img/wn/${weather.daily[0].weather[0].icon}.png`;\n  }\n  useEffect(() => {\n    if (weather && weather.current) {\n      if (weatherIcon === \"09d\" || weatherIcon === \"09n\" || weatherIcon === \"10d\" || weatherIcon === \"10n\") {\n        weatherDesc = \"percipitation\";\n      } else if (weatherIcon === \"11d\" || weatherIcon === \"11n\" || weatherIcon === \"13d\" || weatherIcon === \"13n\") {\n        weatherDesc = \"storm or snow\";\n      } else {\n        weatherDesc = \"no percipitation\";\n      }\n      fetch(\"http://164.8.222.5:3000/workouts/workout\", {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          weatherDesc: weatherDesc\n        })\n      }).then(response => response.json()).then(data => setWorkout(data)).catch(error => console.error('There was a problem with the fetch operation: ', error));\n      weatherDescRef.current = weather;\n    }\n    if (weather && weather.daily) {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n        chartInstance.current = null;\n      }\n      let ctx = chartRef.current.getContext('2d');\n      chartInstance.current = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: weather.hourly.slice(0, 24).map((_, i) => `${i + 1} h`),\n          datasets: [{\n            label: 'Temperature',\n            data: weather.hourly.slice(0, 24).map(d => d.temp - 273.15),\n            borderColor: 'rgb(75, 192, 192)',\n            fill: false\n          }]\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: 'Temperature over the next 24 hours'\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                callback: function (value, index, values) {\n                  return value + 'Â°C';\n                }\n              }\n            }]\n          }\n        }\n      });\n    }\n  }, [weather]);\n  const handleSearch = event => {\n    event.preventDefault();\n    fetch(`https://api.geoapify.com/v1/geocode/search?text=${city}&apiKey=ce191d9d40c548219acda46a66904290`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      const lat1 = data.features[0].geometry.coordinates[1];\n      const long1 = data.features[0].geometry.coordinates[0];\n      setLat(lat1);\n      setLong(long1);\n      return fetch(`http://api.openweathermap.org/data/3.0/onecall?lat=${lat1}&lon=${long1}&appid=a079118662ea266c81754b94e99980ab`);\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setWeather(data);\n      setCityName(city);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation: ', error);\n    });\n  };\n  async function handleCityClick(cityName1) {\n    fetch(`https://api.geoapify.com/v1/geocode/search?text=${cityName1}&apiKey=ce191d9d40c548219acda46a66904290`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      const lat1 = data.features[0].geometry.coordinates[1];\n      const long1 = data.features[0].geometry.coordinates[0];\n      setLat(lat1);\n      setLong(long1);\n      return fetch(`http://api.openweathermap.org/data/3.0/onecall?lat=${lat1}&lon=${long1}&appid=a079118662ea266c81754b94e99980ab`);\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setWeather(data);\n      setCityName(cityName1);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation: ', error);\n    });\n  }\n  async function handleFavourite(e) {\n    e.preventDefault();\n    if (!cityName) {\n      console.log('City name is not set. Cannot handle favourite.');\n      return;\n    }\n    const resFavourites = await fetch(\"http://164.8.222.5:3000/users/favourites\", {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userID: user\n      })\n    });\n    const favourites1 = await resFavourites.json();\n    if (favourites1.some(favourite => favourite.city === cityName)) {\n      console.log('User already has this location as a favourite.');\n      return;\n    }\n    const res = await fetch(\"http://164.8.222.5:3000/users/favourite\", {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userID: user,\n        lat: lat,\n        long: long,\n        city: cityName\n      })\n    });\n    const data = await res.json();\n    if (data._id !== undefined) {\n      window.location.href = \"/\";\n    }\n  }\n  const canvasStyle = {\n    width: '600px'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [favourites.map((favourite, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: e => {\n          e.preventDefault();\n          setCity(favourite.city, handleCityClick(favourite.city));\n        },\n        children: favourite.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this)), user && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search city\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleFavourite,\n        children: \"Favourite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: workout.workoutDesc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: cityName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Current weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this), weather && weather.current && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrlCurrent,\n        alt: \"Weather icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", weather.current.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", tempCelsius.toFixed(2), \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pressure: \", weather.current.pressure, \" mb\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weather.current.humidity, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind speed: \", weather.current.wind_speed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), weather && weather.daily && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrlDaily,\n        alt: \"Weather icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", weather.daily[0].weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature day: \", tempCelsiusDay.toFixed(2), \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature night: \", tempCelsiusNight.toFixed(2), \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature min: \", tempCelsiusMin.toFixed(2), \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature max: \", tempCelsiusMax.toFixed(2), \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sunrise: \", sunriseStr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sunset: \", sunsetStr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weather.daily[0].humidity, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind speed: \", weather.daily[0].wind_speed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Temperature over the next 24 hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: canvasStyle,\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Home, \"rQPKpsS/Eru0qmalRydgsOibu/g=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","useRef","useContext","Chart","LineController","LineElement","PointElement","LinearScale","CategoryScale","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","weather","setWeather","user","chartRef","chartInstance","register","lat","setLat","long","setLong","city","setCity","cityName","setCityName","favourites","setFavourites","workout","setWorkout","weatherDescRef","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetch","then","response","ok","Error","status","json","data","console","log","catch","error","code","message","method","credentials","headers","body","JSON","stringify","userID","tempCelsius","tempCelsiusDay","tempCelsiusNight","tempCelsiusMin","tempCelsiusMax","sunriseDate","sunriseHours","sunriseMinutes","sunriseStr","sunsetDate","sunsetHours","sunsetMinutes","sunsetStr","iconUrlCurrent","iconUrlDaily","weatherIcon","weatherDesc","current","daily","temp","day","night","min","max","Date","sunrise","getHours","getMinutes","sunset","substr","icon","destroy","ctx","getContext","type","labels","hourly","slice","map","_","i","datasets","label","d","borderColor","fill","options","responsive","title","display","text","scales","yAxes","ticks","callback","value","index","values","handleSearch","event","preventDefault","lat1","features","geometry","coordinates","long1","handleCityClick","cityName1","handleFavourite","e","resFavourites","favourites1","some","favourite","res","_id","undefined","window","location","href","canvasStyle","width","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","workoutDesc","src","alt","description","toFixed","pressure","humidity","wind_speed","style","ref","_c","$RefreshReg$"],"sources":["C:/Users/Å½iga/Desktop/RAzI/frontendweb/src/components/Home.js"],"sourcesContent":["import { useEffect, useState, useRef, useContext } from 'react';\r\nimport { Chart, LineController, LineElement, PointElement, LinearScale, CategoryScale } from 'chart.js';\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction Home(){\r\n    const [weather, setWeather] = useState(null);\r\n    const { user } = useContext(UserContext);\r\n    let chartRef = useRef(null);\r\n    let chartInstance = useRef(null);\r\n    Chart.register(LineController, LineElement, PointElement, LinearScale, CategoryScale);\r\n\r\n    const [lat, setLat] = useState(\"\");\r\n    const [long, setLong] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [cityName, setCityName] = useState(\"\");\r\n    const [favourites, setFavourites] = useState([]);\r\n    const [workout, setWorkout] = useState([]);\r\n    const weatherDescRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                setLat(latitude);\r\n                setLong(longitude);\r\n\r\n                fetch(`http://api.openweathermap.org/data/3.0/onecall?lat=${latitude}&lon=${longitude}&appid=a079118662ea266c81754b94e99980ab`)\r\n                .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                return response.json();\r\n                })\r\n                .then(data => {\r\n                    console.log(data);\r\n                    setWeather(data);\r\n                    setCityName(\"\");\r\n                })\r\n                .catch(error => {\r\n                    console.error('There was a problem with the fetch operation: ', error);\r\n                });\r\n            }, (error) => {\r\n                console.error(\"Error Code = \" + error.code + \" - \" + error.message);\r\n            });\r\n        }\r\n        if (user) {\r\n            fetch(\"http://164.8.222.5:3000/users/favourites\", {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    userID: user\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => setFavourites(data))\r\n            .catch(error => console.error('There was a problem with the fetch operation: ', error));\r\n        }\r\n    }, [user]);\r\n\r\n    let tempCelsius = 0;\r\n    let tempCelsiusDay = 0;\r\n    let tempCelsiusNight = 0;\r\n    let tempCelsiusMin = 0;\r\n    let tempCelsiusMax = 0;\r\n    let sunriseDate, sunriseHours, sunriseMinutes, sunriseStr;\r\n    let sunsetDate, sunsetHours, sunsetMinutes, sunsetStr;\r\n    let iconUrlCurrent, iconUrlDaily;\r\n    let weatherIcon, weatherDesc;\r\n\r\n    if (weather && weather.current && weather.daily) {\r\n        tempCelsius = weather.current.temp - 273.15;\r\n        tempCelsiusDay = weather.daily[0].temp.day - 273.15;\r\n        tempCelsiusNight = weather.daily[0].temp.night - 273.15;\r\n        tempCelsiusMin = weather.daily[0].temp.min - 273.15;\r\n        tempCelsiusMax = weather.daily[0].temp.max - 273.15;\r\n\r\n        sunriseDate = new Date(weather.daily[0].sunrise * 1000);\r\n        sunriseHours = sunriseDate.getHours();\r\n        sunriseMinutes = \"0\" + sunriseDate.getMinutes();\r\n\r\n        sunsetDate = new Date(weather.daily[0].sunset * 1000);\r\n        sunsetHours = sunsetDate.getHours();\r\n        sunsetMinutes = \"0\" + sunsetDate.getMinutes();\r\n\r\n        sunriseStr = sunriseHours + ':' + sunriseMinutes.substr(-2);\r\n        sunsetStr = sunsetHours + ':' + sunsetMinutes.substr(-2);\r\n\r\n        weatherIcon = weather.current.weather[0].icon;\r\n        iconUrlCurrent = `http://openweathermap.org/img/wn/${weather.current.weather[0].icon}.png`;\r\n        iconUrlDaily = `http://openweathermap.org/img/wn/${weather.daily[0].weather[0].icon}.png`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (weather && weather.current) {\r\n            if(weatherIcon === \"09d\" || weatherIcon === \"09n\" || weatherIcon === \"10d\" || weatherIcon === \"10n\"){\r\n                weatherDesc = \"percipitation\";\r\n            }\r\n            else if(weatherIcon === \"11d\" || weatherIcon === \"11n\" || weatherIcon === \"13d\" || weatherIcon === \"13n\") {\r\n                weatherDesc = \"storm or snow\";\r\n            }\r\n            else {\r\n                weatherDesc = \"no percipitation\";\r\n            }\r\n            fetch(\"http://164.8.222.5:3000/workouts/workout\", {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    weatherDesc: weatherDesc\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => setWorkout(data))\r\n            .catch(error => console.error('There was a problem with the fetch operation: ', error));\r\n            weatherDescRef.current = weather;\r\n        }\r\n        if (weather && weather.daily) {\r\n            if (chartInstance.current) {\r\n                chartInstance.current.destroy();\r\n                chartInstance.current = null;\r\n            }\r\n            let ctx = chartRef.current.getContext('2d');\r\n    \r\n            chartInstance.current = new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: weather.hourly.slice(0, 24).map((_, i) => `${i + 1} h`),\r\n                    datasets: [{\r\n                        label: 'Temperature',\r\n                        data: weather.hourly.slice(0, 24).map(d => d.temp - 273.15),\r\n                        borderColor: 'rgb(75, 192, 192)',\r\n                        fill: false\r\n                    }]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Temperature over the next 24 hours'\r\n                    },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                callback: function(value, index, values) {\r\n                                    return  value + 'Â°C';\r\n                                }\r\n                            }\r\n                        }]\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }, [weather]);\r\n\r\n    const handleSearch = (event) => {\r\n        event.preventDefault();\r\n    \r\n        fetch(`https://api.geoapify.com/v1/geocode/search?text=${city}&apiKey=ce191d9d40c548219acda46a66904290`)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            const lat1 = data.features[0].geometry.coordinates[1];\r\n            const long1 = data.features[0].geometry.coordinates[0];\r\n            setLat(lat1);\r\n            setLong(long1);\r\n            return fetch(`http://api.openweathermap.org/data/3.0/onecall?lat=${lat1}&lon=${long1}&appid=a079118662ea266c81754b94e99980ab`);\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            setWeather(data);\r\n            setCityName(city);\r\n        })\r\n        .catch(error => {\r\n            console.error('There was a problem with the fetch operation: ', error);\r\n        });\r\n    };\r\n\r\n    async function handleCityClick(cityName1) {\r\n        fetch(`https://api.geoapify.com/v1/geocode/search?text=${cityName1}&apiKey=ce191d9d40c548219acda46a66904290`)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            const lat1 = data.features[0].geometry.coordinates[1];\r\n            const long1 = data.features[0].geometry.coordinates[0];\r\n            setLat(lat1);\r\n            setLong(long1);\r\n            return fetch(`http://api.openweathermap.org/data/3.0/onecall?lat=${lat1}&lon=${long1}&appid=a079118662ea266c81754b94e99980ab`);\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            setWeather(data);\r\n            setCityName(cityName1);\r\n        })\r\n        .catch(error => {\r\n            console.error('There was a problem with the fetch operation: ', error);\r\n        });\r\n    }\r\n\r\n    async function handleFavourite(e){\r\n        e.preventDefault();\r\n        if (!cityName) {\r\n            console.log('City name is not set. Cannot handle favourite.');\r\n            return;\r\n        }\r\n        const resFavourites = await fetch(\"http://164.8.222.5:3000/users/favourites\", {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                userID: user\r\n            })\r\n        });\r\n\r\n        const favourites1 = await resFavourites.json();\r\n        if (favourites1.some(favourite => favourite.city === cityName)) {\r\n            console.log('User already has this location as a favourite.');\r\n            return;\r\n        }\r\n        const res = await fetch(\"http://164.8.222.5:3000/users/favourite\", {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                userID: user,\r\n                lat: lat,\r\n                long: long,\r\n                city: cityName\r\n            })\r\n        });\r\n        const data = await res.json();\r\n        if(data._id !== undefined){\r\n            window.location.href=\"/\";\r\n        }\r\n    }\r\n\r\n    const canvasStyle = {\r\n        width: '600px'\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {favourites.map((favourite, index) => (\r\n                <li key={index}>\r\n                    <a href=\"#\" onClick={(e) => {e.preventDefault(); setCity(favourite.city, handleCityClick(favourite.city))}}>\r\n                        {favourite.city}\r\n                    </a>\r\n                </li>\r\n            ))}\r\n            {user && (\r\n                <form onSubmit={handleSearch}>\r\n                    <input type=\"text\" placeholder=\"Search city\" value={city} onChange={e => setCity(e.target.value)} />\r\n                    <button type=\"submit\">Search</button>\r\n                    <button type=\"button\" onClick={handleFavourite}>Favourite</button>\r\n                </form>\r\n            )}\r\n            <p>{workout.workoutDesc}</p>\r\n            <h1>{cityName}</h1>\r\n            <h1>Current weather</h1>\r\n            {weather && weather.current && (\r\n            <>\r\n                <img src={iconUrlCurrent} alt=\"Weather icon\" />\r\n                <p>Description: {weather.current.weather[0].description}</p>\r\n                <p>Temperature: {tempCelsius.toFixed(2)} Â°C</p>\r\n                <p>Pressure: {weather.current.pressure} mb</p>\r\n                <p>Humidity: {weather.current.humidity} %</p>\r\n                <p>Wind speed: {weather.current.wind_speed} km/h</p>\r\n            </>\r\n             )}\r\n            <h1>Weather today</h1>\r\n            {weather && weather.daily && (\r\n            <>\r\n                <img src={iconUrlDaily} alt=\"Weather icon\" />\r\n                <p>Description: {weather.daily[0].weather[0].description}</p>\r\n                <p>Temperature day: {tempCelsiusDay.toFixed(2)} Â°C</p>\r\n                <p>Temperature night: {tempCelsiusNight.toFixed(2)} Â°C</p>\r\n                <p>Temperature min: {tempCelsiusMin.toFixed(2)} Â°C</p>\r\n                <p>Temperature max: {tempCelsiusMax.toFixed(2)} Â°C</p>\r\n                <p>Sunrise: {sunriseStr}</p>\r\n                <p>Sunset: {sunsetStr}</p>\r\n                <p>Humidity: {weather.daily[0].humidity} %</p>\r\n                <p>Wind speed: {weather.daily[0].wind_speed} km/h</p>\r\n                <h1>Temperature over the next 24 hours</h1>\r\n                <div style={canvasStyle}>\r\n                    <canvas ref={chartRef} />\r\n                </div>\r\n            </>\r\n             )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}