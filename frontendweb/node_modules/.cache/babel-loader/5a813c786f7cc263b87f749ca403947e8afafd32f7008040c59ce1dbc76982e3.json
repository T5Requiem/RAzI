{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Diga\\\\Desktop\\\\RAzI\\\\frontendweb\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../userContext';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const userContext = useContext(UserContext);\n  const [profile, setProfile] = useState({});\n  useEffect(function () {\n    const getProfile = async function () {\n      const data = await res.json();\n      setProfile(data);\n    };\n    getProfile();\n  }, []);\n  async function Login(e) {\n    e.preventDefault();\n    const res = await fetch(\"http://164.8.222.5:3000/users/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    const data = await res.json();\n    if (data._id !== undefined) {\n      userContext.setUserContext(data);\n    } else {\n      setUsername(\"\");\n      setPassword(\"\");\n      setError(\"Invalid username or password\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!userContext.user ? /*#__PURE__*/_jsxDEV(Navigate, {\n      replace: true,\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Username: \", profile.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", profile.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Profile, \"jizM/Pon8CX7q0xPAwH8ODPi/wk=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useContext","useEffect","useState","UserContext","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","userContext","profile","setProfile","getProfile","data","res","json","Login","e","preventDefault","fetch","method","credentials","headers","body","JSON","stringify","username","password","_id","undefined","setUserContext","setUsername","setPassword","setError","children","user","replace","to","fileName","_jsxFileName","lineNumber","columnNumber","email","_c","$RefreshReg$"],"sources":["C:/Users/Å½iga/Desktop/RAzI/frontendweb/src/components/Profile.js"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\r\nimport { UserContext } from '../userContext';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nfunction Profile(){\r\n    const userContext = useContext(UserContext); \r\n    const [profile, setProfile] = useState({});\r\n\r\n    useEffect(function(){\r\n        const getProfile = async function(){\r\n            const data = await res.json();\r\n            setProfile(data);\r\n        }\r\n        getProfile();\r\n    }, []);\r\n\r\n    async function Login(e){\r\n        e.preventDefault();\r\n        const res = await fetch(\"http://164.8.222.5:3000/users/login\", {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password\r\n            })\r\n        });\r\n        const data = await res.json();\r\n        if(data._id !== undefined){\r\n            userContext.setUserContext(data);\r\n        } else {\r\n            setUsername(\"\");\r\n            setPassword(\"\");\r\n            setError(\"Invalid username or password\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!userContext.user ? <Navigate replace to=\"/login\" /> : \"\"}\r\n            <h1>User profile</h1>\r\n            <p>Username: {profile.username}</p>\r\n            <p>Email: {profile.email}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,OAAOA,CAAA,EAAE;EAAAC,EAAA;EACd,MAAMC,WAAW,GAAGX,UAAU,CAACG,WAAW,CAAC;EAC3C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CD,SAAS,CAAC,YAAU;IAChB,MAAMa,UAAU,GAAG,eAAAA,CAAA,EAAgB;MAC/B,MAAMC,IAAI,GAAG,MAAMC,GAAG,CAACC,IAAI,CAAC,CAAC;MAC7BJ,UAAU,CAACE,IAAI,CAAC;IACpB,CAAC;IACDD,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeI,KAAKA,CAACC,CAAC,EAAC;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMJ,GAAG,GAAG,MAAMK,KAAK,CAAC,qCAAqC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAkB,CAAC;MAC9CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA;MACd,CAAC;IACL,CAAC,CAAC;IACF,MAAMd,IAAI,GAAG,MAAMC,GAAG,CAACC,IAAI,CAAC,CAAC;IAC7B,IAAGF,IAAI,CAACe,GAAG,KAAKC,SAAS,EAAC;MACtBpB,WAAW,CAACqB,cAAc,CAACjB,IAAI,CAAC;IACpC,CAAC,MAAM;MACHkB,WAAW,CAAC,EAAE,CAAC;MACfC,WAAW,CAAC,EAAE,CAAC;MACfC,QAAQ,CAAC,8BAA8B,CAAC;IAC5C;EACJ;EAEA,oBACI7B,OAAA,CAAAE,SAAA;IAAA4B,QAAA,GACK,CAACzB,WAAW,CAAC0B,IAAI,gBAAG/B,OAAA,CAACF,QAAQ;MAACkC,OAAO;MAACC,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,EAAE,eAC1DrC,OAAA;MAAA8B,QAAA,EAAI;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrC,OAAA;MAAA8B,QAAA,GAAG,YAAU,EAACxB,OAAO,CAACgB,QAAQ;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCrC,OAAA;MAAA8B,QAAA,GAAG,SAAO,EAACxB,OAAO,CAACgC,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAC/B,CAAC;AAEX;AAACjC,EAAA,CAzCQD,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AA2ChB,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}